[tool.poetry]

name = "minilog"
version = "2.2b1"
description = "Minimalistic wrapper for Python logging."

license = "MIT"

authors = ["Jace Browning <jacebrowning@gmail.com>"]

readme = "README.md"
packages = [{ include = "log" }]

homepage = "https://pypi.org/project/minilog"
documentation = "https://minilog.readthedocs.io"
repository = "https://github.com/jacebrowning/minilog"

keywords = ["logging"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: System :: Logging",
]

[tool.poetry.dependencies]

python = "^3.8"

[tool.poetry.dev-dependencies]

# Formatters
black = "^22.1"
isort = "^5.10"

# Linters
pylint = "~2.6.0"
pydocstyle = "*"
mypy = "~0.931"
types-freezegun = "*"

# Testing
pytest = "^7.2"
pytest-describe = "^2.0"
pytest-expecter = "^3.0"
pytest-ordering = "*"
pytest-cov = "*"
pytest-repeat = "*"
pytest-profiling = "*"
freezegun = "*"

# Reports
coveragespace = "^6.0.1"

# Documentation
mkdocs = "~1.2"
pygments = "^2.5.2"

# Tooling
pyinstaller = "*"
sniffer = "*"
MacFSEvents = { version = "*", platform = "darwin" }
pync = { version = "*", platform = "darwin" }
ipython = "^7.16.3"

[tool.black]

quiet = true

[tool.isort]

profile = "black"

[tool.mypy]

ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true

cache_dir = ".cache/mypy/"

[tool.pytest.ini_options]

addopts = """
--strict-markers

-r sxX
--show-capture=log

--cov-report=html
--cov-report=term-missing:skip-covered
--no-cov-on-fail
"""

cache_dir = ".cache/pytest/"

markers = ["first", "last"]

[build-system]

requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
